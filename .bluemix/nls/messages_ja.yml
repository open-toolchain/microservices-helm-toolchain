---
template.name: "Microservices の開発およびテスト (Kubernetes および Helm)"
template.description: "このクラウド・ネイティブ・ツールチェーンとともに、継続的な統合 (CI) パイプラインと継続的なデプロイメント (CD) パイプラインの組み合わせを使用して、個別に開発されたマイクロサービスを、複数の環境にわたってプロモートされた調整リリースに統合します。 このツールチェーンでは、3 つのマイクロサービス (Catalog API、Orders API、および両方の API を呼び出す UI) で構成されるサンプル・オンライン・ストア・アプリが使用されます。 このツールチェーンは、継続的デリバリー、ソース管理、機能テスト、Issue トラッキング、オンライン編集、およびアラート通知用に事前構成されています。\n\nCatalog API と Orders API は、Cloudant ストアにサポートされています。 このアプリケーションをデプロイする処理の一環として、無料の Cloudant サービス・インスタンスが作成されます。 詳細および条件については、[IBM Cloud カタログ](https://cloud.ibm.com/catalog/services/cloudant) を参照してください。\n\nこのツールチェーンは、Continuous Delivery サービスに含まれるツールを使用します。 そのサービスのインスタンスが選択した組織にない場合は、**「作成」**をクリックすると、無料の[ライト](/catalog/services/continuous-delivery/)・プランが選択されてインスタンスが自動的に追加されます。\n\n開始するには、**「作成」**をクリックしてください。\n\n段階的な説明については、[チュートリアル](https://www.ibm.com/cloud/garage/tutorials/use-develop-test-microservices-with-kubernetes-and-helm-toolchain) を参照してください。"
template.gettingStarted: "**ツールチェーンの準備ができました。**\n**クイック・スタート:** Git リポジトリーに対する変更をコミットし、 Helm アンブレラ・チャートを使用していずれかのマイクロサービスの新しいビルドおよびデプロイメントをトリガーしてください。 DevOps Insights の「デプロイメント・リスク」ダッシュボードで結果を確認してください。 段階的な説明については、このツールチェーンの [チュートリアル](https://www.ibm.com/cloud/garage/tutorials/use-develop-test-microservices-with-kubernetes-and-helm-toolchain?task=3) を参照してください。"
deploy.title: "Microservices のデプロイメント・ステージ"
deploy.description: "マイクロサービス・デプロイメント・スキーマ"
deploy.longDescription: "Delivery Pipeline は、継続的デプロイメントを自動化します。"
deploy.umbrellaAppName: "アプリ総称"
deploy.umbrellaAppDescription: "UI マイクロサービス、Orders API マイクロサービス、および Catalog API マイクロサービスで形成されたアプリ全体の名前"
deploy.apiKeyDescription: "IBM Cloud ランタイムにアクセスするには API キーは必須です。 API キーがない場合は、「作成」ボタンをクリックしてください。 API キーは、「ibmcloud iam api-key-create」やコンソール (https://cloud.ibm.com/iam#/apikeys) を使用しても取得できます。"
deploy.org: "IBM Cloud 組織"
deploy.space: "IBM Cloud スペース"
deploy.region: "IBM Cloud リージョン"
deploy.apikey: "IBM Cloud API キー"
deploy.containerregRegion: "Container Registry リージョン"
deploy.containerregns: "Container Registry 名前空間"
deploy.imgregRegion: "コンテナー・イメージ・レジストリー・リージョン"
deploy.imgregNs: "コンテナー・イメージ・レジストリー名前空間"
deploy.namespaceDescription: "実動名前空間"
deploy.namespaceStageDescription: "名前空間のステージング"
deploy.regionDescription: "IBM Cloud リージョン"
deploy.registryRegionDescription: "イメージ・レジストリーのための IBM Cloud リージョン"
deploy.clusternsDescription: "まだ存在しない場合、クラスター名前空間は自動的に作成され、構成されます。"
deploy.registrynsDescription: "コンテナー・イメージ・レジストリー内の名前空間。 {ibmcloud cr namespace-add] でセットアップできます。 詳細はこちら: https://cloud.ibm.com/docs/services/Registry/index.html"
deploy.clusterDescription: "CLI コマンド「ibmcloud ks clusters」を使用して、または [コンソール](https://cloud.ibm.com/containers-kubernetes/home/clusters) で Kubernetes クラスター名を取得します。"
deploy.clusterNameDescription: "クラスター名"
deploy.environmentsTitle: "**環境:**"
build.containerRegistryTitle: "**コンテナー・イメージ・レジストリー:**"
region: "リージョン"
resourceGroup: "リソース・グループ"
organization: "組織"
space: "スペース"
clusterName: "クラスター名"
clusterNamespace: "クラスター名前空間"
prodStage: "実稼働環境"
testStage: "ステージング環境"
github.title: "Microservices のデプロイメント・ステージ"
github.description: "マイクロサービス Git スキーマ"
github.longDescription: "IBM がホストするリポジトリーや Issue トラッキングを使用すれば、新規の Git リポジトリーにも既存の Git リポジトリーにもソース・コードを保管できます。"
github.sourceRepository: "ソース・リポジトリー"
github.targetRepository: "ターゲット・リポジトリー"
headerSVG.think: "思考"
headerSVG.code: "コード"
headerSVG.deliver: "配信"
headerSVG.run: "実行"
headerSVG.learn: "学習"
headerSVG.manage: "管理"
headerSVG.culture: "養成"
headerSVG.issueTracker: "Issue トラッカー"
headerSVG.repository1: "リポジトリー"
headerSVG.repository2: "リポジトリー"
headerSVG.repository3: "リポジトリー"
headerSVG.repository4: "リポジトリー"
headerSVG.webIde: "WEB IDE"
headerSVG.pipeline1: "PIPELINE"
headerSVG.pipeline2: "PIPELINE"
headerSVG.pipeline3: "PIPELINE"
headerSVG.bluemix: "BLUEMIX"
headerSVG.ibmCloud: "IBM Cloud"
headerSVG.slack: "SLACK"
headerSVG.saucelabs1: "SAUCE LABS"
headerSVG.saucelabs2: "SAUCE LABS"
headerSVG.saucelabs3: "SAUCE LABS"
headerSVG.pagerDuty: "PAGER DUTY"
headerSVG.devops: "DEVOPS"
headerSVG.insights: "INSIGHTS"
headerSVG.microservice1: "Microservice 1"
headerSVG.microservice2: "Microservice 2"
headerSVG.microservice3: "Microservice 3"
headerSVG.pipelineCI: "PIPELINE (CI)"
headerSVG.pipelineCI2: "PIPELINE (CI)"
headerSVG.pipelineCI3: "PIPELINE (CI)"
headerSVG.pipelineCD: "PIPELINE (CD)"
headerSVG.gitlab: "GitLab"
headerSVG.solution: "ソリューション"
