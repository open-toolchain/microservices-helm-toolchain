---
template.name: "Kubernetes 및 Helm을 사용하여 마이크로서비스 개발 및 테스트"
template.description: "이 클라우드 네이티브 도구 체인을 사용하면 지속적 통합(CI)과 지속적 배치(CD) 파이프라인의 조합을 사용하여 개별적으로 개발된 마이크로서비스를 환경 전체에서 승격된 조정된 릴리스로 구성할 수 있습니다. 이 도구 체인에서는 3개의 마이크로서비스(카탈로그 API, 순서 API 및 두 API 모두를 호출하는 UI)로 구성된 샘플 온라인 저장소 앱을 사용합니다. 이 도구 체인은 지속적 딜리버리, 소스 제어, 기능 테스트, 문제 추적, 온라인 편집 및 경보 알림을 위해 사전 구성되어 있습니다.\n\n카탈로그 및 순서 API는 Cloudant 저장소에 의해 되돌려집니다. 이 애플리케이션을 배치하는 작업의 일부로 무료 Cloudant 서비스 인스턴스가 작성됩니다. 자세한 정보와 용어는 [IBM Cloud 카탈로그](https://cloud.ibm.com/catalog/services/cloudant)를 참조하십시오.\n\n이 도구 체인은 Continuous Delivery 서비스의 일부인 도구를 사용합니다. 해당 서비스의 인스턴스가 선택된 조직에 아직 없는 경우, **작성**을 클릭하면 무료 [Lite](/catalog/services/continuous-delivery/) 플랜이 선택된 상태로 인스턴스가 자동으로 추가됩니다.\n\n시작하려면 **작성**을 클릭하십시오.\n\n단계별 지시사항은 [튜토리얼](https://www.ibm.com/cloud/garage/tutorials/use-develop-test-microservices-with-kubernetes-and-helm-toolchain)을 참조하십시오."
template.gettingStarted: "**도구 체인이 준비되었습니다!**\n**빠른 시작:** Git 저장소에 대한 변경사항을 커미트하여 Helm 우산형 차트를 통해 마이크로서비스 중 하나의 새 빌드와 배치를 트리거하십시오. DevOps Insights의 Deployment Risk 대시보드에서 결과를 확인하십시오. 단계별 지시사항은 이 도구 체인의 [튜토리얼](https://www.ibm.com/cloud/garage/tutorials/use-develop-test-microservices-with-kubernetes-and-helm-toolchain?task=3)을 참조하십시오."
deploy.title: "마이크로서비스 배치 단계"
deploy.description: "마이크로서비스 배치 스키마"
deploy.longDescription: "Delivery Pipeline은 지속적 배치를 자동화합니다."
deploy.umbrellaAppName: "전체 앱 이름"
deploy.umbrellaAppDescription: "UI, 순서 API 및 카탈로그 API 마이크로서비스로 구성된 전체 앱의 이름"
deploy.apiKeyDescription: "API 키는 IBM Cloud Runtime에 액세스하는 데 필수입니다. 이 키가 없는 경우, 작성 단추를 클릭하십시오. 또한 'ibmcloud iam api-key-create'를 사용하거나 https://cloud.ibm.com/iam#/apikeys에서 콘솔을 통해 API 키를 확보할 수 있습니다."
deploy.org: "IBM Cloud 조직"
deploy.space: "IBM Cloud 영역"
deploy.region: "IBM Cloud 지역"
deploy.apikey: "IBM Cloud API 키"
deploy.containerregRegion: "컨테이너 레지스트리 지역"
deploy.containerregns: "컨테이너 레지스트리 네임스페이스"
deploy.imgregRegion: "컨테이너 이미지 레지스트리 지역"
deploy.imgregNs: "컨테이너 이미지 레지스트리 네임스페이스"
deploy.namespaceDescription: "제품 네임스페이스"
deploy.namespaceStageDescription: "스테이징 네임스페이스"
deploy.regionDescription: "IBM Cloud 지역"
deploy.registryRegionDescription: "이미지 레지스트리의 IBM Cloud 지역"
deploy.clusternsDescription: "클러스터 네임스페이스가 없는 경우, 자동으로 생성되어 구성됩니다."
deploy.registrynsDescription: "컨테이너 이미지 레지스트리의 네임스페이스입니다. {ibmcloud cr namespace-add]로 설정할 수 있습니다. https://cloud.ibm.com/docs/services/Registry/index.html에서 자세히 알아보십시오."
deploy.clusterDescription: "CLI 명령 'ibmcloud cs clusters'를 사용하거나 [콘솔](https://cloud.ibm.com/containers-kubernetes/home/clusters)을 통해 Kubernetes 클러스터 이름을 검색하십시오."
deploy.clusterNameDescription: "클러스터 이름"
deploy.environmentsTitle: "**환경:**"
build.containerRegistryTitle: "**컨테이너 이미지 레지스트리:**"
region: "지역"
resourceGroup: "리소스 그룹"
organization: "조직"
space: "영역"
clusterName: "클러스터 이름"
clusterNamespace: "클러스터 네임스페이스"
prodStage: "프로덕션 환경"
testStage: "스테이징 환경"
github.title: "마이크로서비스 배치 단계"
github.description: "마이크로서비스 Git 스키마"
github.longDescription: "IBM에서 호스팅하는 저장소 및 문제 추적을 사용하여 신규 또는 기존 Git 저장소에 소스 코드를 저장할 수 있습니다."
github.sourceRepository: "소스 저장소"
github.targetRepository: "대상 저장소"
headerSVG.think: "사고"
headerSVG.code: "코드"
headerSVG.deliver: "전달"
headerSVG.run: "실행"
headerSVG.learn: "학습"
headerSVG.manage: "관리"
headerSVG.culture: "문화"
headerSVG.issueTracker: "문제 트래커"
headerSVG.repository1: "저장소"
headerSVG.repository2: "저장소"
headerSVG.repository3: "저장소"
headerSVG.repository4: "저장소"
headerSVG.webIde: "WEB IDE"
headerSVG.pipeline1: "PIPELINE"
headerSVG.pipeline2: "PIPELINE"
headerSVG.pipeline3: "PIPELINE"
headerSVG.bluemix: "BLUEMIX"
headerSVG.ibmCloud: "IBM Cloud"
headerSVG.slack: "SLACK"
headerSVG.saucelabs1: "SAUCE LABS"
headerSVG.saucelabs2: "SAUCE LABS"
headerSVG.saucelabs3: "SAUCE LABS"
headerSVG.pagerDuty: "PAGER DUTY"
headerSVG.devops: "DEVOPS"
headerSVG.insights: "INSIGHTS"
headerSVG.microservice1: "마이크로서비스 1"
headerSVG.microservice2: "마이크로서비스 2"
headerSVG.microservice3: "마이크로서비스 3"
headerSVG.pipelineCI: "파이프라인(CI)"
headerSVG.pipelineCI2: "파이프라인(CI)"
headerSVG.pipelineCI3: "파이프라인(CI)"
headerSVG.pipelineCD: "파이프라인(CD)"
headerSVG.gitlab: "GitLab"
headerSVG.solution: "솔루션"
